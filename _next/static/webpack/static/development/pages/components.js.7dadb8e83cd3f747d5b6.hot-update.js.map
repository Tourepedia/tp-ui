{"version":3,"file":"static/webpack/static/development/pages/components.js.7dadb8e83cd3f747d5b6.hot-update.js","sources":["webpack:///./pages/components/index.mdx"],"sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport ComponentsLayout from \"../../components/ComponentsLayout\"\nexport const meta = {\n    title: \"Components | Tourepedia Design System\",\n    description: \"React components build on top of Tourepedia CSS\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = ComponentsLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <div className=\"max-w-4xl px-4 mx-auto\">\n      <div className=\"text-center mt-16\">\n  <h1 className=\"text-4xl md:text-6xl font-light\">Components</h1>\n  <h2 className=\"text-2xl md:text-3xl font-light\">\n    React components for the Tourepedia Design System\n  </h2>\n      </div>\n      <div className=\"mt-20\">\n        <h2>{`Introduction`}</h2>\n        <p>{`Using our designs system, we have built some reusable component for easily creating markup in React. Bellow is the\nlist of components and live editor to play with them.`}</p>\n        <h3>{`Button`}</h3>\n        <h4>{`Installation`}</h4>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install --save @tourepedia/button\n`}</code></pre>\n        <h4>{`Usage`}</h4>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-jsx\"\n          }}>{`import Button from \"@tourepedia/button\"\n\nfunction App () {\n  return <Button>Button</Button>\n}\n`}</code></pre>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-jsx\",\n            \"metastring\": \"live=true\",\n            \"live\": \"true\"\n          }}>{`<Button primary type=\"button\">Click Me!</Button>\n`}</code></pre>\n        <h3>{`Dialog`}</h3>\n        <h4>{`Installation`}</h4>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install --save @tourepedia/dialog\n`}</code></pre>\n        <h4>{`Usage`}</h4>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-jsx\"\n          }}>{`import Dialog, { useDialog } from \"@tourepedia/dialog\"\n\nfunction App () {\n  const [isOpen, open, close] = useDialog(false)\n  return <>\n    <Dialog open={isOpen} onClose={close}>\n      Dialog Content Here\n    </Dialog>\n    <Button onClick={open}>Open</Button>\n  </>\n}\n`}</code></pre>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-jsx\",\n            \"metastring\": \"live=true\",\n            \"live\": \"true\"\n          }}>{`function () {\n  const [isOpen, open, close] = useDialog(false)\n  return <div>\n    <Dialog open={isOpen} onClose={close}>\n      <Dialog.Header>\n        <Dialog.Title>Dialog Title</Dialog.Title>\n      </Dialog.Header>\n      <Dialog.Body>\n        <h2>Here is some stuff inside the dialog</h2>\n        <p>Some lorem ipsum text</p>\n      </Dialog.Body>\n      <Dialog.Footer>\n        <Button primary onClick={close}>OK! Close Now</Button>\n      </Dialog.Footer>\n    </Dialog>\n    <p>Here is a simple Dialog Component</p>\n    <Button onClick={open}>Open Dialog</Button>\n  </div>\n}\n`}</code></pre>\n      </div>\n    </div>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAIA;AACA;AADA;AAGA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AAEA;;;;A","sourceRoot":""}