{"version":3,"file":"static/webpack/static/development/pages/components/paginate.js.baf98d864303e1b7f24b.hot-update.js","sources":["webpack:///./pages/components/paginate.mdx"],"sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport Layout from \"../../components/ComponentsLayout\"\nexport const meta = {\n    title: \"Paginate\",\n    description: \"Pagination component\",\n    name: \"@tourepedia/paginate\",\n    usage: `import Paginate from \"@tourepedia/paginate\"\nfunction App () {\n  return <Paginate\n    from={1}\n    to={10}\n    total={20}\n    currentPage={1}\n    lastPage={2}\n    isFetching={false}\n    onChange={page => {}}\n  />\n}`\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = Layout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Playground`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`function () {\n  const perPage = 10\n  const total = 25\n  const lastPage = Math.ceil(total / perPage)\n  const [isFetching, changeIsFetching] = useState(false)\n  const [current, changeCurrent] = useState({\n    currentPage: 1,\n    from: Math.min(1, total),\n    to: Math.min(perPage, total)\n  })\n  function onPageChange(currentPage) {\n    changeIsFetching(true)\n    setTimeout(() => {\n      const from = Math.min((currentPage - 1 ) * perPage + 1, total)\n      const to = Math.min(from + perPage, total)\n      changeCurrent({\n        currentPage,\n        from,\n        to\n      })\n      changeIsFetching(false)\n    }, 1000)\n  }\n  const { currentPage, from, to} = current\n  return <Paginate\n    lastPage={lastPage}\n    total={total}\n    from={from}\n    to={to}\n    currentPage={currentPage}\n    isFetching={isFetching}\n    onChange={page => {\n      onPageChange(page)\n    }}\n  />\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAgBA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAIA;AACA;AADA;AAGA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0CA;AAEA;AACA;;;;A","sourceRoot":""}